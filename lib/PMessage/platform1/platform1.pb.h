/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9.1 */

#ifndef PB_EXAMPLE_PLATFORM1_PB_H_INCLUDED
#define PB_EXAMPLE_PLATFORM1_PB_H_INCLUDED
#include "pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _example_Person {
    pb_callback_t name;
    int32_t id;
    pb_callback_t email;
} example_Person;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define example_Person_init_default              {{{NULL}, NULL}, 0, {{NULL}, NULL}}
#define example_Person_init_zero                 {{{NULL}, NULL}, 0, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define example_Person_name_tag                  1
#define example_Person_id_tag                    2
#define example_Person_email_tag                 3

/* Struct field encoding specification for nanopb */
#define example_Person_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   name,              1) \
X(a, STATIC,   SINGULAR, INT32,    id,                2) \
X(a, CALLBACK, SINGULAR, STRING,   email,             3)
#define example_Person_CALLBACK pb_default_field_callback
#define example_Person_DEFAULT NULL

extern const pb_msgdesc_t example_Person_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define example_Person_fields &example_Person_msg

/* Maximum encoded size of messages (where known) */
/* example_Person_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
